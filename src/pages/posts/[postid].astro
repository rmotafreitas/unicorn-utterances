---
import "../../global.scss";

import { COLORS } from 'constants/theme';

import type { MarkdownInstance } from 'astro';
import {PostInfo} from 'types/PostInfo';
import { getAllPostsForListView } from 'utils/fs/posts-and-collections-api';

const CSS_THEME = Object.entries(COLORS).reduce((prev, [key, val]) => {
  prev += `\n--${key}: ${val.light};`;
  return prev;
}, "");

const rawStylesCSS = `
  :root {
    ${CSS_THEME}
  }
`

export async function getStaticPaths() {
  const postsMeta = await Astro.glob<PostInfo>('../../../content/blog/**/*.md')

    const postsExpanded = getAllPostsForListView(postsMeta, 'en');

  return postsExpanded.map(post => {
    return {
      params: {
        // TODO: Pass locale
        postid: post.slug
      },
      props: {
        Content: post.Content,
        slug: post.slug,
        locale: post.locale
      }
    }
  })
}

const { Content, slug, locale } = Astro.props as {
  slug: string,
  // TODO: Make more type strict
  locale: string,
  frontmatter: PostInfo,
  Content: MarkdownInstance<any>['Content']
}
---

<html lang="en">

<head>
  <Fragment set:html={`<style>${rawStylesCSS}</style>`} />
</head>

<body>
  <article>
    <main class="post-body">
      <Content />
    </main>
  </article>
</body>

</html>