---
import * as path from 'path';

import "../../global.scss";

import { COLORS } from 'constants/theme';

import type { MarkdownInstance } from 'astro';
import { ListViewPosts } from "utils/fs/api";

const CSS_THEME = Object.entries(COLORS).reduce((prev, [key, val]) => {
  prev += `\n--${key}: ${val.light};`;
  return prev;
}, "");

const rawStylesCSS = `
  :root {
    ${CSS_THEME}
  }
`

type Post = ListViewPosts[number];

export function getStaticPaths() {
  const postsMeta = await Astro.glob<Post>('../../../content/blog/**/*.md')
  postsMeta[0].frontmatter

  return postsMeta.map(postMeta => {
    // Split based on `/` or `\` if in Windows vs not
    const directorySplit = postMeta.file.split(path.sep);
    // This is the folder name, AKA how we generate the slug ID
    const slug = directorySplit.at(-2);
    // index.md or index.es.md
    const indexName = directorySplit.at(-1);
    const indexSplit = indexName.split('.');
    let locale = indexSplit.at(-2);
    if (locale === 'index') {
      locale = 'en';
    }

    return {
      params: {
        // TODO: Pass locale
        postid: slug
      },
      props: {
        Content: postMeta.Content,
        frontmatter: postMeta.frontmatter,
        slug,
        locale
      }
    }
  })
}

const { Content, frontmatter, slug, locale } = Astro.props as {
  slug: string,
  // TODO: Make more type strict
  locale: string,
  frontmatter: Post,
  Content: MarkdownInstance<any>['Content']
}
---

<html lang="en">

<head>
  <Fragment set:html={`<style>${rawStylesCSS}</style>`} />
  <script src="svimg/dist/s-image" />
</head>

<body>
  <article>
    <main class="post-body">
      <Content />
    </main>
  </article>
</body>

</html>