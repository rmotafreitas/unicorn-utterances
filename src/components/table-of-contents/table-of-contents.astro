---
import tableOfContentsStyle from "./table-of-contents.module.scss";
// import { useHeadingIntersectionObserver } from "./use-heading-intersection-observer";
import classnames from "classnames";
import { PostInfo } from "types/PostInfo";
import HeadingIntersectionObserverScript from "./heading-intersection-observer-script.astro";

interface TableOfContentsProps {
  headingsWithId: PostInfo["headingsWithId"];
}

const { headingsWithId } = Astro.props as TableOfContentsProps;

const headings = headingsWithId?.length ? headingsWithId : [];

// get the "minimum" depth of heading used in the post (e.g. if the post only uses h2 and h3 -> minDepth=1)
const minDepth = Math.min(...headings.map((h) => h.depth));

// offset the heading depths by minDepth, so they always start at 1
const headingsToDisplay = headings
  .map((h) => Object.assign({}, h, { depth: h.depth - minDepth + 1 }))
  .filter((headingInfo) => headingInfo.depth <= 3);

const headingsToDisplaySlugs = headingsToDisplay.map(item => item.slug);
---

<aside aria-label={"Table of Contents"}>
  <ol
    class={tableOfContentsStyle.tableList}
    role="list"
    id="tocList"
  >
    {headingsToDisplay.map((headingInfo, i) => {
      const liClassNames = classnames(tableOfContentsStyle.tocLi, {
        [tableOfContentsStyle.tocH1]: headingInfo.depth === 1,
        [tableOfContentsStyle.tocH2]: headingInfo.depth === 2,
        [tableOfContentsStyle.tocH3]: headingInfo.depth === 3,
      });
      return (
        <li
          class={liClassNames}
          data-headingitem="true"
        >
          <a href={`#${headingInfo.slug}`}>{headingInfo.value}</a>
        </li>
      );
    })}
  </ol>
</aside>
<HeadingIntersectionObserverScript headingsToDisplaySlugs={headingsToDisplaySlugs} />